---
- hosts: all
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    - name: "Boot storage hard disk"
      mount:
        path: /storage
        src: UUID=9a89e864-d961-4460-b315-2f9ea6b4accc
        fstype: ext4
        boot: true
        state: mounted

    - name: "Create TeamCity data directory"
      file:
        path: /storage/teamcity/data
        state: directory
        owner: 1000
        group: 1000

    - name: "Create TeamCity logs directory"
      file:
        path: /var/logs/teamcity
        state: directory
        owner: 1000
        group: 1000

    - name: "Create TeamCity agent config directory"
      file:
        path: /etc/teamcity/agent
        state: directory
        owner: 1000
        group: 1000

    - name: "Create TeamCity database directory"
      file:
        path: /storage/postgres/teamcity/data
        state: directory
        owner: 1000
        group: 1000

    - name: "Create TeamCity Agent work directory"
      file:
        path: /opt/buildagent/work
        state: directory
        owner: 1000
        group: 1000

    - name: "Create TeamCity Agent system directory"
      file:
        path: /opt/buildagent/system
        state: directory
        owner: 1000
        group: 1000

    - name: "Create TeamCity Agent temp directory"
      file:
        path: /opt/buildagent/temp
        state: directory
        owner: 1000
        group: 1000

    - name: Create Postgres database container for TeamCity
      docker_container:
        name: teamcity-db
        image: postgres
        restart_policy: unless-stopped
        env:
          POSTGRES_PASSWORD: "{{ password }}"
          POSTGRES_USER: "teamcity"
          POSTGRES_DB: "teamcity"
        volumes:
          - "/storage/postgres/teamcity/data:/var/lib/postgresql/data"
        networks:
          - name: traefik

    - name: Create a TeamCity server container
      docker_container:
        name: teamcity-server
        image: jetbrains/teamcity-server:latest
        env:
          TEAMCITY_HTTPS_PROXY_ENABLED: "true"
        volumes:
          - "/storage/teamcity/data:/data/teamcity_server/datadir"
          - "/var/logs/teamcity:/opt/teamcity/logs"
        restart_policy: unless-stopped
        privileged: "true"
        networks:
          - name: traefik
        labels:
          traefik.enable: "true"
          traefik.http.routers.teamcity.rule: Host(`teamcity.tools.thomassen.pro`)
          traefik.http.routers.teamcity.entrypoints: websecure
          traefik.http.routers.teamcity.tls: "true"
          traefik.http.routers.teamcity.tls.certresolver: letsencrypt
          traefik.http.services.teamcity.loadbalancer.server.scheme: http
          traefik.http.services.teamcity.loadbalancer.server.port: "8111"
        memory: 2G
        memory_swap: 6G
        cpus: 1.5

    - name: Create a TeamCity agent container
      docker_container:
        name: teamcity-agent
        image: nandoth/teamcity-agent-browsers:latest
        privileged: "true"
        env:
          SERVER_URL: "http://teamcity-server:8111"
          AGENT_NAME: "voldemort"
        volumes:
          - "/etc/teamcity/agent:/data/teamcity_agent/conf"
          - "/var/run/docker.sock:/var/run/docker.sock"
          - "/opt/buildagent/work:/opt/buildagent/work"
          - "/opt/buildagent/system:/opt/buildagent/system"
          - "/opt/buildagent/temp:/opt/buildagent/temp"
        restart_policy: unless-stopped
        networks:
          - name: traefik
        memory: 1G
        memory_swap: 5G
        cpus: 1

    - name: Add Apt signing key
      ansible.builtin.apt_key:
        url: "https://dl.google.com/linux/linux_signing_key.pub"
        state: present
    - name: Add repository into sources list
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main
        state: present
        filename: google-chrome
    - name: Install google-chrome-stable
      ansible.builtin.apt:
        name: "google-chrome-stable"
        state: latest
        update_cache: true

    - name: Install Firefox
      become: yes
      apt:
        name:
          - firefox
        state: present
        install_recommends: yes

